<<<<<<< HEAD
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tut.employee.mapper.CompanyMapper">
  <resultMap id="BaseResultMap" type="com.tut.employee.model.Company">
    <id column="cid" jdbcType="INTEGER" property="cid" />
    <result column="cname" jdbcType="VARCHAR" property="cname" />
    <result column="province" jdbcType="VARCHAR" property="province"/>
    <result column="caddress" jdbcType="VARCHAR" property="caddress" />
    <result column="contacts" jdbcType="VARCHAR" property="contacts" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="shxy" jdbcType="VARCHAR" property="shxy" />
  </resultMap>
  <sql id="Base_Column_List">
    cid, cname, province, caddress, contacts, phone, email, shxy
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from company
    where cid = #{cid,jdbcType=INTEGER}
  </select>
  <select id="queryCompany" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from company
    where cname like CONCAT ('%',#{cid,jdbcType=INTEGER},'%')
  </select>
  <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from company
    where cname = #{cname,jdbcType=VARCHAR}
  </select>
  <select id="selectByShxx" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from company
    where shxy = #{shxx,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from company
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from company
    where cid = #{cid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tut.employee.model.Company">
    insert into company ( cname, province,
      caddress, contacts, phone, 
      email, shxy)
    values (#{cname,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR},
      #{caddress,jdbcType=VARCHAR}, #{contacts,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{shxy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tut.employee.model.Company">
    insert into company
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        cid,
      </if>
      <if test="cname != null">
        cname,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="caddress != null">
        caddress,
      </if>
      <if test="contacts != null">
        contacts,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="shxy != null">
        shxy,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="cname != null">
        #{cname,jdbcType=VARCHAR},
      </if>
      <if test="caddress != null">
        #{caddress,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null">
        #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="shxy != null">
        #{shxy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tut.employee.model.Company">
    update company
    <set>
      <if test="cname != null">
        cname = #{cname,jdbcType=VARCHAR},
      </if>
      <if test="caddress != null">
        caddress = #{caddress,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null">
        contacts = #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where cid = #{cid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tut.employee.model.Company">
    update company
    set
      cname = #{cname,jdbcType=VARCHAR},
      caddress = #{caddress,jdbcType=VARCHAR},
      contacts = #{contacts,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR}
    where cid = #{cid,jdbcType=INTEGER}
  </update>
=======
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tut.employee.mapper.CompanyMapper">
  <resultMap id="BaseResultMap" type="com.tut.employee.model.Company">
    <id column="cid" jdbcType="INTEGER" property="cid" />
    <result column="cname" jdbcType="VARCHAR" property="cname" />
    <result column="province" jdbcType="VARCHAR" property="province"/>
    <result column="caddress" jdbcType="VARCHAR" property="caddress" />
    <result column="contacts" jdbcType="VARCHAR" property="contacts" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
  </resultMap>
  <sql id="Base_Column_List">
    cid, cname, province, caddress, contacts, phone, email
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from company
    where cid = #{cid,jdbcType=INTEGER}
  </select>
  <select id="queryCompany" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from company
    where cname like CONCAT ('%',#{cid,jdbcType=INTEGER},'%')
  </select>
  <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from company
    where cname = #{cname,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from company
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from company
    where cid = #{cid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tut.employee.model.Company">
    insert into company ( cname, province,
      caddress, contacts, phone, 
      email)
    values (#{cname,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}
      #{caddress,jdbcType=VARCHAR}, #{contacts,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tut.employee.model.Company">
    insert into company
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        cid,
      </if>
      <if test="cname != null">
        cname,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="caddress != null">
        caddress,
      </if>
      <if test="contacts != null">
        contacts,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="cname != null">
        #{cname,jdbcType=VARCHAR},
      </if>
      <if test="caddress != null">
        #{caddress,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null">
        #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tut.employee.model.Company">
    update company
    <set>
      <if test="cname != null">
        cname = #{cname,jdbcType=VARCHAR},
      </if>
      <if test="caddress != null">
        caddress = #{caddress,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null">
        contacts = #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where cid = #{cid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tut.employee.model.Company">
    update company
    set
      <!--cname = #{cname,jdbcType=VARCHAR},
      caddress = #{caddress,jdbcType=VARCHAR},
      contacts = #{contacts,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR}-->
      province = #{province,jdbcType=VARCHAR}
    where cid = #{cid,jdbcType=INTEGER}
  </update>
>>>>>>> 78c1550c70b4444f978fe68d9918bd073881bade
</mapper>